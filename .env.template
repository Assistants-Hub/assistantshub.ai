# NextAuth.js Parameters
NEXTAUTH_URL=http://localhost:3001/
NEXTAUTH_SECRET= # Linux: `openssl rand -hex 32` or go to https://generate-secret.vercel.app/32

# Providers
ENABLE_CREDENTIALS_PROVIDER=true
ENABLE_EMAIL_PROVIDER=false
ENABLE_GITHUB_PROVIDER=false
ENABLE_GOOGLE_PROVIDER=false

# Credentials Provider Parameters
CREDENTIALS_APPROVED_USERNAME=jsmith
CREDENTIALS_APPROVED_PASSWORD=localhost@

# Email Server Parameters
EMAIL_SERVER_USER=resend
EMAIL_SERVER_PASSWORD=
EMAIL_SERVER_HOST=smtp.resend.com
EMAIL_SERVER_PORT=465
EMAIL_FROM=no-reply@assistantshub.ai

# GitHub OAuth Parameters
GITHUB_CLIENT_ID=
GITHUB_CLIENT_SECRET=

# Google OAuth Parameters
GOOGLE_CLIENT_ID=
GOOGLE_CLIENT_SECRET=

# AWS Parameters
AWS_S3_BUCKET=
AWS_REGION=us-west-2
AWS_ACCESS_KEY_ID=
AWS_SECRET_ACCESS_KEY=

# OpenAI API Key for Assistants Hub
OPENAI_API_KEY=
# Google AI Studio API Key for Assistants Hub
GOOGLE_AI_STUDIO_API_KEY=
# Groq Cloud API Key for Assistants Hub
GROQ_CLOUD_API_KEY=
# Anthropic API Key for Assistants Hub
ANTHROPIC_API_KEY=


# Environment variables declared in this file are automatically made available to Prisma.
# See the documentation for more detail: https://pris.ly/d/prisma-schema#accessing-environment-variables-from-the-schema

# Prisma supports the native connection string format for PostgreSQL, MySQL, SQLite, SQL Server, MongoDB and CockroachDB.
# See the documentation for all the connection string options: https://pris.ly/d/connection-strings
POSTGRES_PRISMA_URL="postgresql://.."
BLOB_READ_WRITE_TOKEN="vercel_blob_rw_..."