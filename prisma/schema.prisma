// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_PRISMA_URL")
}

model Account {
  owner           String
  ownerType       String      @default("personal")
  openAIApiKey    String
  limitAssistants Int         @default(2)
  created_at      DateTime    @default(now())
  updated_at      DateTime    @updatedAt
  Assistant       Assistant[]

  @@id([owner, ownerType])
}

model Assistant {
  id               String   @id
  object           Json?
  accountOwner     String?
  accountOwnerType String?
  account          Account? @relation(fields: [accountOwner, accountOwnerType], references: [owner, ownerType])
  avatar           String?
  created_at       DateTime @default(now())
  updated_at       DateTime @updatedAt
  Thread           Thread[]
}

model Thread {
  id          String     @id
  object      Json?
  assistantId String?
  assistant   Assistant? @relation(fields: [assistantId], references: [id])
  created_at  DateTime   @default(now())
  updated_at  DateTime   @updatedAt
  Message     Message[]
}

model Message {
  id         String   @id
  object     Json?
  threadId   String?
  thread     Thread?  @relation(fields: [threadId], references: [id])
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model Metric {
  id          String   @default(uuid())
  time        DateTime @default(now())
  assistantId String
  name        String
  value       Float
  tags        Json?

  @@unique([assistantId, name, time])
  @@index(fields: [time], map: "Metric_time_idx") // This is necessary because Prisma overrode the default index name by timescaledb
}
